package com.cybercad.billing.domain.conn.reading;
// Generated 23 Sep, 2015 4:46:26 PM by Hibernate Tools 3.2.4.GA


import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.cybercad.billing.domain.conn.Connection;
import com.cybercad.billing.domain.conn.payment.Invoice;
import com.cybercad.billing.domain.people.ReadCycle;

/**
 * ConnReading generated by hbm2java
 */
@Entity
@Table(name="conn_reading"
    ,catalog="billing"
)
public class ConnReading  implements java.io.Serializable {


     private Integer id;
     private Fault fault;
     private Invoice invoice;
     private ReadCycle readCycle;
     private Connection connection;
     private Date readDate;
     private Long units;

    public ConnReading() {
    }

	
    public ConnReading(Fault fault, Invoice invoice, ReadCycle readCycle, Connection connection) {
        this.fault = fault;
        this.invoice = invoice;
        this.readCycle = readCycle;
        this.connection = connection;
    }
    public ConnReading(Fault fault, Invoice invoice, ReadCycle readCycle, Connection connection, Date readDate, Long units) {
       this.fault = fault;
       this.invoice = invoice;
       this.readCycle = readCycle;
       this.connection = connection;
       this.readDate = readDate;
       this.units = units;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="fault_id", nullable=false)
    public Fault getFault() {
        return this.fault;
    }
    
    public void setFault(Fault fault) {
        this.fault = fault;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="invoice_id", nullable=false)
    public Invoice getInvoice() {
        return this.invoice;
    }
    
    public void setInvoice(Invoice invoice) {
        this.invoice = invoice;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="read_cycle_id", nullable=false)
    public ReadCycle getReadCycle() {
        return this.readCycle;
    }
    
    public void setReadCycle(ReadCycle readCycle) {
        this.readCycle = readCycle;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="connection_id", nullable=false)
    public Connection getConnection() {
        return this.connection;
    }
    
    public void setConnection(Connection connection) {
        this.connection = connection;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="read_date", length=19)
    public Date getReadDate() {
        return this.readDate;
    }
    
    public void setReadDate(Date readDate) {
        this.readDate = readDate;
    }

    
    @Column(name="units")
    public Long getUnits() {
        return this.units;
    }
    
    public void setUnits(Long units) {
        this.units = units;
    }




}


