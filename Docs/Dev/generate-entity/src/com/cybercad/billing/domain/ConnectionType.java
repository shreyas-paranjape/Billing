package com.cybercad.billing.domain;
// Generated 13 Aug, 2015 2:58:27 AM by Hibernate Tools 3.2.4.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ConnectionType generated by hbm2java
 */
@Entity
@Table(name="connection_type"
    ,catalog="billing"
)
public class ConnectionType  implements java.io.Serializable {


     private int id;
     private TariffClass tariffClass;
     private String description;
     private Integer minUnits;
     private Set<Connection> connections = new HashSet<Connection>(0);

    public ConnectionType() {
    }

	
    public ConnectionType(int id, TariffClass tariffClass) {
        this.id = id;
        this.tariffClass = tariffClass;
    }
    public ConnectionType(int id, TariffClass tariffClass, String description, Integer minUnits, Set<Connection> connections) {
       this.id = id;
       this.tariffClass = tariffClass;
       this.description = description;
       this.minUnits = minUnits;
       this.connections = connections;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="tariff_class_id", nullable=false)
    public TariffClass getTariffClass() {
        return this.tariffClass;
    }
    
    public void setTariffClass(TariffClass tariffClass) {
        this.tariffClass = tariffClass;
    }

    
    @Column(name="description", length=45)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="min_units")
    public Integer getMinUnits() {
        return this.minUnits;
    }
    
    public void setMinUnits(Integer minUnits) {
        this.minUnits = minUnits;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="connectionType")
    public Set<Connection> getConnections() {
        return this.connections;
    }
    
    public void setConnections(Set<Connection> connections) {
        this.connections = connections;
    }




}


