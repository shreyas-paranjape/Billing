package com.cybercad.billing.domain.devices;
// Generated 13 Aug, 2015 2:58:27 AM by Hibernate Tools 3.2.4.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.cybercad.billing.domain.conn.Connection;

/**
 * Meter generated by hbm2java
 */
@Entity
@Table(name="meter"
,catalog="billing"
		)
public class Meter  implements java.io.Serializable {


	private int id;
	private MeterType meterType;
	private String meterNumber;
	private Set<Connection> connections = new HashSet<Connection>(0);


	private Date effectiveDate;
	private Date disconnectionDate;
	private int initialReading;
	private boolean isOwnMeter;
	@ManyToOne
	private MeterStatus status;

	public Meter() {
	}


	public Meter(int id, MeterType meterType) {
		this.id = id;
		this.meterType = meterType;
	}
	public Meter(int id, MeterType meterType, String meterNumber, Set<Connection> connections) {
		this.id = id;
		this.meterType = meterType;
		this.meterNumber = meterNumber;
		this.connections = connections;
	}

	@Id 


	@Column(name="id", unique=true, nullable=false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name="meter_type_id", nullable=false)
	public MeterType getMeterType() {
		return this.meterType;
	}

	public void setMeterType(MeterType meterType) {
		this.meterType = meterType;
	}


	@Column(name="meter_number", length=45)
	public String getMeterNumber() {
		return this.meterNumber;
	}

	public void setMeterNumber(String meterNumber) {
		this.meterNumber = meterNumber;
	}

	@OneToMany(fetch=FetchType.LAZY, mappedBy="meter")
	public Set<Connection> getConnections() {
		return this.connections;
	}

	public void setConnections(Set<Connection> connections) {
		this.connections = connections;
	}




}


