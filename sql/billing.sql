-- MySQL Script generated by MySQL Workbench
-- Monday 10 August 2015 12:57:39 PM IST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema billing
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema billing
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `billing` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `billing` ;

-- -----------------------------------------------------
-- Table `billing`.`consumer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `billing`.`consumer` (
  `id` INT NOT NULL,
  `cons_code` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `cons_code_UNIQUE` (`cons_code` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `billing`.`meter_reader`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `billing`.`meter_reader` (
  `id` INT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `billing`.`meter_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `billing`.`meter_type` (
  `id` INT NULL AUTO_INCREMENT,
  `description` VARCHAR(45) NULL,
  `size` VARCHAR(45) NULL,
  `rent` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `billing`.`meter`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `billing`.`meter` (
  `id` INT NOT NULL,
  `meter_number` VARCHAR(45) NULL,
  `meter_type_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_meter_meter_type1_idx` (`meter_type_id` ASC),
  CONSTRAINT `fk_meter_meter_type1`
    FOREIGN KEY (`meter_type_id`)
    REFERENCES `billing`.`meter_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `billing`.`device`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `billing`.`device` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `meter_reader_id` INT NOT NULL,
  `type` VARCHAR(2) NULL,
  `code` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_device_meter_reader1_idx` (`meter_reader_id` ASC),
  CONSTRAINT `fk_device_meter_reader1`
    FOREIGN KEY (`meter_reader_id`)
    REFERENCES `billing`.`meter_reader` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `billing`.`pwd_class`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `billing`.`pwd_class` (
  `id` INT NOT NULL COMMENT '\n',
  `description` VARCHAR(100) NULL,
  `code` VARCHAR(10) NULL,
  `lft` INT NULL,
  `rgt` INT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `billing`.`constituency`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `billing`.`constituency` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `billing`.`tariff_class`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `billing`.`tariff_class` (
  `id` INT NOT NULL,
  `description` VARCHAR(45) NULL,
  `activation_date` DATE NULL,
  `termination_date` DATE NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `billing`.`connection_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `billing`.`connection_type` (
  `id` INT NOT NULL,
  `description` VARCHAR(45) NULL,
  `min_units` INT NULL,
  `tariff_class_id` INT NOT NULL,
  `sewage_charge_multiplier` FLOAT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_connection_type_tariff_class1_idx` (`tariff_class_id` ASC),
  CONSTRAINT `fk_connection_type_tariff_class1`
    FOREIGN KEY (`tariff_class_id`)
    REFERENCES `billing`.`tariff_class` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `billing`.`location`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `billing`.`location` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `latitude` FLOAT NOT NULL,
  `longitude` FLOAT NOT NULL,
  `add_line_1` VARCHAR(100) NULL,
  `add_line_2` VARCHAR(100) NULL,
  `city_village` VARCHAR(45) NULL,
  `taluka` VARCHAR(45) NULL,
  `district` VARCHAR(45) NULL,
  `state` VARCHAR(45) NULL,
  `zipcode` VARCHAR(45) NULL,
  `admin_type` CHAR NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `billing`.`conn_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `billing`.`conn_status` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `conn_id` INT NULL,
  `current_reading` DOUBLE NULL,
  `current_balance` DOUBLE NULL,
  `current_average` DOUBLE NULL,
  `prev_read_date` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `billing`.`connection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `billing`.`connection` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `conn_code` VARCHAR(15) NOT NULL,
  `meter_id` INT NOT NULL,
  `status` TINYINT(1) NULL,
  `political_zone_id` INT NOT NULL,
  `constituency_id` INT NOT NULL,
  `connection_type_id` INT NOT NULL,
  `pwd_class_id` INT NOT NULL,
  `location_id` INT NOT NULL,
  `conn_status_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `conn_code_UNIQUE` (`conn_code` ASC),
  INDEX `fk_connection_meter1_idx` (`meter_id` ASC),
  INDEX `fk_connection_constituency1_idx` (`constituency_id` ASC),
  INDEX `fk_connection_connection_type1_idx` (`connection_type_id` ASC),
  INDEX `fk_connection_pwd_class1_idx` (`pwd_class_id` ASC),
  INDEX `fk_connection_location1_idx` (`location_id` ASC),
  INDEX `fk_connection_conn_status1_idx` (`conn_status_id` ASC),
  CONSTRAINT `fk_connection_meter1`
    FOREIGN KEY (`meter_id`)
    REFERENCES `billing`.`meter` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_connection_constituency1`
    FOREIGN KEY (`constituency_id`)
    REFERENCES `billing`.`constituency` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_connection_connection_type1`
    FOREIGN KEY (`connection_type_id`)
    REFERENCES `billing`.`connection_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_connection_pwd_class1`
    FOREIGN KEY (`pwd_class_id`)
    REFERENCES `billing`.`pwd_class` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_connection_location1`
    FOREIGN KEY (`location_id`)
    REFERENCES `billing`.`location` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_connection_conn_status1`
    FOREIGN KEY (`conn_status_id`)
    REFERENCES `billing`.`conn_status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `billing`.`cons_conn`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `billing`.`cons_conn` (
  `id` INT NOT NULL,
  `activation_date` DATE NULL,
  `termination_date` DATE NULL,
  `connection_id` INT NOT NULL,
  `consumer_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_cons_conn_connection1_idx` (`connection_id` ASC),
  INDEX `fk_cons_conn_consumer1_idx` (`consumer_id` ASC),
  CONSTRAINT `fk_cons_conn_connection1`
    FOREIGN KEY (`connection_id`)
    REFERENCES `billing`.`connection` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_cons_conn_consumer1`
    FOREIGN KEY (`consumer_id`)
    REFERENCES `billing`.`consumer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `billing`.`read_cycle`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `billing`.`read_cycle` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `meter_reader_id` INT NOT NULL,
  `start_date` DATE NULL,
  `end_date` DATE NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_read_cycle_meter_reader1_idx` (`meter_reader_id` ASC),
  CONSTRAINT `fk_read_cycle_meter_reader1`
    FOREIGN KEY (`meter_reader_id`)
    REFERENCES `billing`.`meter_reader` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `billing`.`fault`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `billing`.`fault` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '	',
  `description` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `billing`.`conn_reading`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `billing`.`conn_reading` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `connection_id` INT NOT NULL,
  `read_cycle_id` INT NOT NULL,
  `read_date` DATETIME NULL,
  `reading` DOUBLE NULL,
  `charges` DOUBLE NULL,
  `fault_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_connection_reading_connection1_idx` (`connection_id` ASC),
  INDEX `fk_conn_reading_read_cycle1_idx` (`read_cycle_id` ASC),
  INDEX `fk_conn_reading_fault1_idx` (`fault_id` ASC),
  CONSTRAINT `fk_connection_reading_connection1`
    FOREIGN KEY (`connection_id`)
    REFERENCES `billing`.`connection` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_conn_reading_read_cycle1`
    FOREIGN KEY (`read_cycle_id`)
    REFERENCES `billing`.`read_cycle` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_conn_reading_fault1`
    FOREIGN KEY (`fault_id`)
    REFERENCES `billing`.`fault` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `billing`.`payment_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `billing`.`payment_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `desciption` VARCHAR(100) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `billing`.`conn_payment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `billing`.`conn_payment` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `connection_id` INT NOT NULL,
  `payment_date` DATETIME NULL,
  `amount` DOUBLE NULL,
  `teller_id` INT NOT NULL,
  `payment_type_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_connection_payment_connection1_idx` (`connection_id` ASC),
  INDEX `fk_conn_payment_payment_type1_idx` (`payment_type_id` ASC),
  CONSTRAINT `fk_connection_payment_connection1`
    FOREIGN KEY (`connection_id`)
    REFERENCES `billing`.`connection` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_conn_payment_payment_type1`
    FOREIGN KEY (`payment_type_id`)
    REFERENCES `billing`.`payment_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `billing`.`tariff_slab`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `billing`.`tariff_slab` (
  `id` INT NOT NULL,
  `code` VARCHAR(45) NULL,
  `tariff_class_id` INT NOT NULL,
  `from_unit` INT NULL,
  `to_unit` INT NULL,
  `tariff` DOUBLE NULL,
  `min_charges` DOUBLE NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_tariff_slab_tariff_class1_idx` (`tariff_class_id` ASC),
  CONSTRAINT `fk_tariff_slab_tariff_class1`
    FOREIGN KEY (`tariff_class_id`)
    REFERENCES `billing`.`tariff_class` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
